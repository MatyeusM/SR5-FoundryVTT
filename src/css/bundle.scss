@use 'config';
@use 'bootstrap';

// got to remove this, when theming is done fully via variables
@use 'sass:color';


// .Roll class is used for labels that will look for data-roll-id on itself or a parent RollId
.Roll {
    @include config.rollable;
}

/**
 * These are default FoundryVTT classes that have been used within Shadowrun5 CSS while not behaving as default.
 * TODO: This is abusing default FoundryVTT CSS classing, which often can cause default FoundryVTT styling to break.
 */
.sr5 {
    .flexcol {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        > * {
            flex: 0;
        }
    }

    .flexcol-rev {
        display: flex;
        flex-direction: column-reverse;
        flex-wrap: nowrap;

        > * {
            flex: 0;
        }
    }

    .flexrow {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
    }

    .flex5 {
        flex: 5;
    }
    .flex6 {
        flex: 6;
    }
    .flex7 {
        flex: 7;
    }
    .flex8 {
        flex: 8;
    }
    .flex9 {
        flex: 9;
    }

    .nowrap {
        flex-wrap: nowrap;
    }

    .align-start {
        align-items: flex-start;
    }

    .center {
        justify-content: center;
    }

    .flex-end {
        justify-content: flex-end;
    }

    .space-between {
        justify-content: space-between;
    }

    .space-around {
        justify-content: space-around;
    }

    .align-center {
        align-items: center;
    }

    .show-situation-modifiers-application {
        @include config.rollable;
    }
    .grid-2-col {
        display: grid;
    }

    // new SIN Layout
    .license-section .list-item-content,
    .license-section .list-item.item-section .list-item-content {
        display: flex !important;
        flex-direction: row;
        justify-content: flex-start !important;
        margin: 0 !important;
        padding: 1px !important;
    }

    /* New or updated rules */
    .license-section .item-text.rtg.rate,
    .license-section .rtg-rate.item-text {
        /* Updated */
        margin-left: 0;
        padding-left: 0;
        text-align: left;
        width: 22px; /* Updated */
    }
    //Header Rating
    .license-section .item-text.rtg.rate-header {
        max-width: 2em;
        margin-left: -1em;
    }
    //Header detail
    .detail {
        margin-left: 1em !important;
    }
    //Rating width
    .license-section .list-item .rtg-rate.item-text {
        max-width: 2em;
    }
    //Item Name field size
    .license-section .list-item .rtg-rate.item-text {
        max-width: 1em;
    }
    .item-name-field {
        max-width: 11em; /* Set to your desired max width */
    }

    .display.left.name-display {
        width: 100%; /* Takes the maximum width of the parent */
        max-width: 100%; /* Optional, ensures it doesn't go beyond parent */
    }
    // This class is only used for sin license descriptions and seems to be mostly a hack to get the description to better align with the license rating.
    .display.desc-sin {
        margin-left: 0.9em;
    }
    .license-section .list-item.item-section .item-left .item-text,
    .license-section .list-item .item-left .item-text.item-name-header {
        flex-basis: calc(15% - 1em);
        text-align: left;
    }

    .item-text.item-name-header {
        /* Set to your desired width */
        max-width: 11em; /* Optional, ensures it doesn't go beyond the set width */
    }

    .license-section .list-item.item-section .item-text.rtg.rate,
    .license-section .list-item .rtg-rate.item-text {
        /* Updated */
        flex-basis: calc(25% - 1em);
        text-align: left;
        width: 22px; /* Updated */
    }

    .license-section .list-item.item-section .item-text.desc.detail,
    .license-section .list-item {
        flex-basis: calc(25% - 1em);
        text-align: left;
    }

    /* Specifics for the rtg-rate input field */
    .license-section .list-item .rtg-rate.item-text input {
        /* Updated */
        width: 22px; /* Updated */
    }

    // Specific em
    .license-section .sr5 .list-header .list-item-content .item-text.desc,
    .license-section .sr5 .list-item .list-item-content .item-text.desc {
        width: 30em;
        margin-right: 5px;
    }

    .license-section .item-left {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .license-section .item-left .item-text {
        align-self: flex-start;
    }

    .license-section .sr5 .list-item .list-item-content .item-text.desc {
        width: 30em !important;
        margin-left: -1em !important;
        text-align: left;
    }

    a.inventory-remove.action-icon.roll {
        padding: 0.5em;
        padding-left: 0.1em;
    }
    a.inventory-edit.action-icon.roll {
        padding: 0.5em;
    }
    span.selection-inventory {
        display: flex;
        margin: 0.2em;
    }
}

.align-items-center {
    align-items: center;
}

.align-content-center {
    align-content: center;
}

.flex0 {
    flex: 0;
}

.flex1 {
    flex: 1;
}

.flex2 {
    flex: 2;
}

.flex3 {
    flex: 3;
}

.flex4 {
    flex: 4;
}

.input {
    position: relative;

    .unit {
        @include config.textOutline;
        position: absolute;
        display: block;
        left: 5px;
        top: 2px;
        z-index: 9;
    }
}

label.checkbox {
    display: block;
    position: relative;
    top: 0;
    left: 0;
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;

    // why are we coloring the checkbox for just screenreaders?
    // the input is set to display: none;
    // set to a normal text-color hover effect
    // TODO: Remove?
    &:hover input ~ .checkmark {
        color: var(--sr5-text-highlight-muted);
    }

    &.init-edge-label {
        margin-right: 1.75em;
        @include config.font-size(12);
        top: 0.95em;
        left: -0.5em;
    }

    input {
        cursor: pointer;
    }

    input.hidden {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
    }

    .checkmark {
        position: absolute;
        @include config.font-size(13); // original 20px, but it always rendered to 13
        top: -0.5em;
        left: 0.8em;
    }
}

// TODO: removal of the class
// a quick search reveals neither foundry nor we are using it
// so assigning normal colors to it
button.plus1_button {
    padding: 2px;
    color: var(--sr5-text-primary);
    line-height: 0;
    flex: 0;
    background: var(--sr5-surface-elevated);
    border-radius: 0.3em;
    text-align: center;

    &:hover {
        cursor: pointer;
    }
}
input[type='checkbox'].toggle {
    display: none;
}
//Collapsible Start
.lbl-toggle {
    cursor: pointer;
}
.collapsible-content {
    max-height: 0;
    overflow-y: auto;
    transition: max-height 0.25s ease-in-out;
    color: var(--sr5-text-primary);
}

.toggle:checked + .list-item-content + .collapsible-content {
    max-height: 310px;
}
//Collapsible End
input[type='checkbox'].display {
    background: transparent;
    color: var(--sr5-text-primary);
    border: none;
    text-align: center;
    @include config.font-size(16);

    &:hover {
        background: transparent;
        border:  1px solid var(--sr5-control-border);
    }
}

input[type='text'].disabled-for-display {
    color: var(--sr5-text-primary-muted);
    background-color: transparent;
}

input[type='text'].display {
    @include config.textOutline;
    background: var(--sr5-control-background);
    color: var(--sr5-text-primary);
    border-radius: 0.3em;
    border-color: var(--sr5-control-border);
    text-align: center;
    min-height: 1em;

    &::placeholder {
        color: var(--sr5-text-primary-muted);
    }

    &.short {
        @include config.font-size(12);
    }

    &.text {
        background: var(--sr5-control-background-inverse);
        border-radius: 0;
    }

    &.right {
        text-align: right;
    }

    &.left {
        text-align: left;
    }

    &:disabled {
        color: var(--sr5-text-primary);
        background: transparent;
        border-color: transparent;
        padding-left: 0;
        padding-right: 0;
        margin-left: 0;
        margin-right: 0;
    }
}

.invisible {
    visibility: hidden;
}

.show-child-on-hover {
    .child-on-hover {
        visibility: hidden;
    }

    &:hover {
        .child-on-hover {
            visibility: visible;
        }
    }
}
/**
     * Special SR5 hr and select display
     */
.sr5 {
    hr {
        border-color: var(--sr5-text-highlight);
    }

    select.display,
    select {
        color: var(--sr5-text-primary);
        background: var(--sr5-control-background-inverse);
        border-radius: 0.3em;
        border-color: var(--sr5-control-border);

        > option {
            background-color: var(--sr5-surface);
        }
    }

    /**
     * Overwrite FoundryVTT default styling within sheets.
     */
    .form-group {
        label {
            color: var(--sr5-text-primary);
            font-weight: bold;
        }

        input {
            color: var(--sr5-text-primary);
        }

        .form-group-element-numerical {
            display: flex;
            flex-direction: row;

            button {
                border-color: var(--sr5-control-icon);
            }

            button,
            input {
                width: 25px;
                height: 25px;
                line-height: inherit;
                vertical-align: middle;
                text-align: center;
            }
        }
    }

    /**
     * Elements used for inline editing
     */
    .inline-input-inventory {
        display: none;
    }

    /**
     * Elements used for linkable documents / entities.
     *
     * This is also present in foundry.scss, but is overwritten by Monks Enhanced Journals module.
     * Let's force it within the SR5 context, while leaving it everywhere else.
     */
    .entity-link,
    .content-link,
    .inline-roll {
        border: 0;
        background: none;
        color: var(--sr5-text-primary) !important;
    }

    .entity-link.content-link {
        color: var(--sr5-text-primary) !important;
    }

    // An origin link is a uuid based entity link, without drag support.
    .origin-link {
        background: var(--sr5-text-primary);
        padding: 1px 4px;
        border: 1px solid var(--sr5-control-border);
        border-radius: 2px;
        white-space: nowrap;
        word-break: break-all;
        color: var(--sr5-text-primary-inverse);
    }

    .roll {
        @include config.rollable;
    }

    .editor {
        height: 95%;
        width: 100%;
    }

    .editor .tox-edit-area {
        background: var(--sr5-control-icon);
    }

    // Styling for any prosemirror editors within shadowrun applications.
    .editor.prosemirror {
        // handles dropdown menus, not select based.
        .pm-dropdown {
            color: var(--sr5-text-primary);
            background: var(--sr5-control-background-inverse);
            border-radius: 0.3em;
            border-color: var(--sr5-control-background-inverse);

            // Icons like chevron and ticks.
            i,
            i:hover {
                color: var(--sr5-text-primary);
            }

            // ul will contain menus and sub-menus and can be nested.
            ul {
                background-color: var(--sr5-surface);
            }

            // li represents each menu entry in both menus and sub-menus
            ul > li:hover {
                color: var(--sr5-text-primary);
                border-color: var(--sr5-control-background);
                background: var(--sr5-control-background-inverse);
            }
        }

        // HTML editing uses a class-less textarea
        textarea {
            color: var(--sr5-text-primary);
        }
    }

    .full-height {
        height: 100%;
    }

    .parts-list {
        @include config.font-size(12);
        display: flex;
        flex-flow: row wrap;
        justify-content: center;
        align-items: center;

        &.vertical {
            flex-flow: column nowrap;
            justify-content: flex-end;
            align-items: flex-end;
        }

        .part {
            white-space: nowrap;

            .value {
                font-weight: bold;
            }

            &.underline {
                text-decoration: underline;
            }
        }

        > * {
            margin: 0 0.5em;
        }
    }

    .no-break {
        white-space: nowrap;
    }

    .window-content {
        background: transparent;
        color: var(--sr5-text-primary);
        overflow: hidden;
        border: 1px solid var(--sr5-control-border);
        border-top: 0px;
    }

    .description > .editor {
        height: 95%;
        min-height: 15em;
        width: 100%;
        color: var(--sr5-text-primary);
    }

    .mods-scroll,
    .scroll-area {
        margin-bottom: 0.5em;
        flex: 1;
        overflow-y: auto;
        color: var(--sr5-text-primary);
    }
    .flexcontainer-skills {
        display: flex;
        min-height: 250px;
    }
    .scroll-area-knowledge {
        flex: 1;
        overflow-y: auto;
        overflow-x: hidden;
        min-height: 0;
    }

    .scroll-area-mods {
        height: 600px;
    }

    .scroll-area-inventory {
        overflow-y: auto;
    }

    .scroll-area.left.light-border-right-skills {
        overflow-y: auto;
    }
    .list-item.item-section.wrap-collapsiblewrap-collapsible {
        height: 400px;
    }

    img {
        box-sizing: border-box;
        border: 1px solid var(--sr5-text-primary-inverse);
        border-radius: 2px;
        max-width: 100%;
        object-fit: contain;
    }

    .profile-img {
        padding: 0.25em;
        min-width: 80px; // should also have a min width
        max-width: 100px;
    }

    .tabs {
        flex: 0;
        align-items: stretch; // Make tabs stretch instead of space horizontally.
        border-bottom: 1px solid var(--sr5-text-highlight);

        > a {
            margin: 0.25em;
            padding: 0.25em;
            margin-bottom: 0;
            position: relative;
            @include config.font-size(16);
            @include config.rollable;

            &.active {
                @include config.linkHovered;
                color: var(--sr5-text-primary);
                background: var(--sr5-control-background);
            }
        }

        > .item {
            // Make tabs stretch across horizontally.
            color: var(--sr5-text-primary);
            flex: 1;
            text-align: center;
        }
    }
    .sheet .editor-content {
        color: var(--sr5-text-primary);
        height: 100%;
        overflow-y: auto;
        word-break: break-word;
    }
    .list-item.item-section.flexrow {
        min-height: 36px;
    }

    label.item-text.item-name[for='select-inventory'] {
        color: var(--sr5-text-highlight);
    }

    label.item-text.item-name {
        color: var(--sr5-text-primary);
    }

    .tab {
        height: 100%;

        .tabbody {
            height: 100%;
            display: flex;
            flex-flow: column nowrap;

            > * {
                flex: 0;
            }

            > .inventory {
                flex: 1;
            }
        }
    }

    .split-container {
        display: flex;
        flex-flow: row nowrap;
        justify-content: center;
        align-items: stretch;
        align-content: stretch;
        height: 100%;

        > * {
            flex: 1;
            width: 100%;
        }

        > *:not(:first-child) {
            margin-left: 0.25em;
        }

        > *:not(:last-child) {
            border-right:  1px solid var(--sr5-control-border);
            padding-right: 0.25em;
        }
    }

    .container {
        max-width: config.$sheet-max-width;
        margin: 0 auto;

        &--fluid {
            margin: 0;
            max-width: 100%;
        }

        &__row {
            display: flex;
            flex-wrap: wrap;
            width: 100%;
        }

        // Auto create grid style classes for a fixed max column grid
        @for $i from 1 through config.$grid__cols {
            &__col-#{$i} {
                flex-basis: calc(100 / (config.$grid__cols / $i)) * 1%;
                overflow: hidden;
            }
        }

        &__col-half {
            flex-basis: 50%;
            overflow: hidden;
        }

        .element {
            padding: 4px;
        }
    }

    .document {
        overflow: hidden;
        white-space: nowrap;
        display: flex;
        align-content: center;

        img {
            height: 34px;
        }

        * {
            display: inline-block;
        }
    }

    .block {
        display: flex;
        flex-flow: column;
        padding: 2px 4px;
        justify-content: space-around;

        .block-line {
            display: flex;
            flex-flow: row nowrap;
            padding: 4px;

            &.center {
                justify-content: center;
            }

            &.border-bottom {
                border-bottom:  1px solid var(--sr5-control-border);
            }

            &.gap-4 {
                > :not(:first-child) {
                    margin-left: 4px;
                }

                > :not(:last-child) {
                    margin-right: 4px;
                }
            }
        }
    }

    .horizontal-cell-input {
        display: flex;
        flex-flow: row nowrap;
        justify-content: start;
        padding: 4px;

        &.stun .cell {
            box-shadow: 0 0 5px 1px var(--sr5-color-stun);
        }

        &.physical .cell {
            box-shadow: 0 0 5px 1px var(--sr5-color-physical);
        }

        &.edge .cell {
            box-shadow: 0 0 5px 1px var(--sr5-color-edge);
        }

        &.matrix .cell {
            box-shadow: 0 0 5px 1px var(--sr5-color-matrix);
        }

        &.overflow .cell {
            box-shadow: 0 0 5px 1px var(--sr5-color-overflow);
        }

        .roll {
            width: 60px;
            margin-right: 8px;
        }

        .cell-container {
            display: flex;
            flex-flow: row;
            justify-content: stretch;

            .cell {
                cursor: pointer;
                text-align: center;
                @include config.font-size(11);
                border:  1px solid var(--sr5-control-border);
                color: var(--sr5-control-icon);
                border-radius: 4px;
                background: var(--sr5-surface);
                min-width: 26px;
                height: 18px;

                &:not(:first-child) {
                    margin-left: 2px;
                }

                &:not(:last-child) {
                    margin-right: 2px;
                }

                &.filled {
                    background: var(--sr5-control-icon);
                    border-color: var(--sr5-text-primary-inverse);
                    color: var(--sr5-text-primary-inverse);
                }

                &:hover {
                    border-color: var(--sr5-text-primary);
                }
            }
        }
    }

    .inventory {
        overflow-y: hidden;
        height: 100%;
        width: 100%;
        display: flex;
        flex-flow: column nowrap;
    }

    .list-header,
    .list-item {
        @include config.font-size(12);
        padding: 0.1em 0.25em;
        min-height: 26px;
        margin: 0.1em;
        margin-inline: 1px;

        &.matrix {
            color: var(--sr5-text-primary);
        }
        .has-desc {
            @include config.rollable;
        }

        &.no-border {
            border-bottom: none;
        }

        &.center {
            justify-content: center;
        }

        &.space-evenly {
            justify-content: space-evenly;
        }

        &.item-section {
            background: var(--sr5-surface);
            color: var(--sr5-text-highlight);
            margin-right: 0;
            margin-left: 0;
            border-bottom: 1px solid var(--sr5-text-highlight);
            padding-top: 5px;
            &.sprite {
                background: none;
            }
            &.faded {
                color: var(--sr5-text-primary-muted);
            }

            &.subcategory-header {
                margin-left: 0.5em;
                border-bottom: none;
            }
        }

        &.subcategory-item {
            margin-left: 0.5em;
        }

        .list-item-content {
            display: flex;
            flex-flow: row nowrap;
            justify-content: space-between;
            align-items: center;
            align-content: center;

            // vertically center the rows, using a table would have
            // been better, but i pray for V2 or during the rework.
            &:not(.list-header > .list-item-content) {
              margin-top: 0.3125rem;
            }

            .item-center {
                display: flex;
                flex-flow: row nowrap;
                align-items: center;
                align-self: center;
            }

            .item-left {
                display: flex;
                flex-flow: row nowrap;
                justify-content: flex-start;
                align-items: center;
                flex-grow: 1;
            }

            .item-right {
                display: flex;
                flex-flow: row nowrap;
                justify-content: flex-end;
                align-items: center;
            }

            .item-img {
                padding-right: 0.25em;
                min-width: 28px; //needed for quality fix
                max-width: 50px;

                &.item-roll {
                    @include config.rollable;

                    &:hover {
                        > img {
                            content: config.asset('dice-solid.svg');
                            filter: invert(1);
                        }
                    }
                }

                > img {
                    margin: 0;
                    transform: translateY(10%);
                }

                & + .item-name {
                    border-left: none !important;
                }
            }

            .item-input {
                width: 9.5em;
            }

            .item-icons {
                display: flex;
                flex-flow: row nowrap;
                justify-content: space-evenly;
                align-items: center;
                color: var(--sr5-control-icon);
                @include config.font-size(12);
                height: 100%;
            }

            .item-text {
                width: 6em; // This will allow item header / line columns to align up.
                margin: 0 0.1rem;
                flex: 1 0 auto;
                text-align: center;
                height: 100%;
                border: var(--sr5-text-primary);
                padding-right: 10px;

                &.faded {
                    color: var(--sr5-text-primary-muted);
                }

                &.center {
                    display: flex;
                    flex-flow: row;
                    justify-content: space-around;
                    align-items: center;
                    align-content: center;
                }

                &.item-name {
                    text-align: left;
                    display: grid;
                    width: auto;

                    &.fresh-import {
                        color: var(--sr5-text-highlight);
                    }
                    &.mods-label {
                        color: var(--sr5-text-primary);
                    }
                }

                &.element {
                    width: 7em;
                }

                &.radius {
                    width: 4em;
                }

                &.dropoff {
                    width: 4em;
                }

                &.rtg {
                    min-width: 3em;
                    max-width: 4em;
                    &.active-skills-rating {
                        padding-right: 1em;
                    }
                }

                &.input {
                    text-align: right;
                    width: 9.5em;
                    &.defense {
                        //Moves the selector Box for defense to the left to align
                        width: 13.5em;
                    }
                }

                &.desc {
                    width: 16em;
                }
                .content-inner {
                    color: var(--sr5-text-primary);
                }
            }

            .skill-item {
                width: 8em;
            }

            .skill-spec-item {
                width: 15em;
            }

            &.skill-header {
                @include config.rollable;
            }
        }
    }

    .list-item:nth-of-type(even) {
        background: var(--sr5-control-background);
    }

    .list-item-description {
        .item-desc {
            padding: 0.25em;
            @include config.font-size(16);
            width: 100%;

            .props {
                display: flex;
                flex-flow: wrap row;
                padding: 0.25em 0;

                > * {
                    flex-shrink: 0;
                    border-right: 1px solid var(--sr5-control-border);
                    border-bottom: 1px solid var(--sr5-control-border);
                    padding: 0.25em 0.5em;
                    margin: 0.1em 0.25em;
                    box-shadow: 0.2em 0.2em 0.3em config.$shadow;
                }
            }

            .description {
                margin: 0.5em 0.25em;
                padding: 0.5em;
            }
        }
        .item-desc:after {
            content: '';
            clear: both;
            display: table;
        }
    }

    .quality .list-item-content .item-text.item-name {
        min-width: 5em;
        max-width: 15em;
        display: contents;
    }
    .modified-target-damage {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
        display: grid;
        grid-template-columns: 40px auto auto;

        .modified-target-damage-cell {
            display: flex;
            align-items: center;
            margin-bottom: 0.15em;
        }
    }

    .important {
        font-weight: bold;
    }

    button,
    button.display {
        color: var(--sr5-text-primary);
        border-color: var(--sr5-text-primary-inverse);
        background: var(--sr5-control-background);
        border-radius: 0.3em;
        text-align: center;

        &:hover {
            cursor: pointer;
            background: var(--sr5-surface-secondary);
        }

        &.short {
            line-height: 1.3em;
        }

        &.light {
            color: var(--sr5-text-primary-inverse);
            background: var(--sr5-text-primary);
        }
    }

    button.display.import-character {
        color: var(--sr5-text-primary);
        border-color: var(--sr5-text-primary-inverse);
        background: var(--sr5-text-primary-inverse-muted);
        border-radius: 0.3em;
        text-align: center;

        &:hover {
            cursor: pointer;
        }

        &.short {
            line-height: 1.3em;
        }

        &.light {
            color: var(--sr5-text-primary-inverse);
            background: var(--sr5-text-primary);
        }
    }
    button.display.show-hidden-skills {
        color: var(--sr5-text-primary);
        border-color: var(--sr5-text-primary-inverse);
        background: var(--sr5-surface-secondary);
        border-radius: 0.3em;
        text-align: center;

        &:hover {
            cursor: pointer;
        }

        &.short {
            line-height: 1.3em;
        }

        &.light {
            color: var(--sr5-text-primary-inverse);
            background: var(--sr5-text-primary);
        }
    }

    button.display.reset-actor-run-data {
        color: var(--sr5-text-primary);
        border-color: var(--sr5-text-primary-inverse);
        background: var(--sr5-surface-secondary);
        border-radius: 0.3em;
        text-align: center;

        &:hover {
            cursor: pointer;
        }

        &.short {
            line-height: 1.3em;
        }

        &.light {
            color: var(--sr5-text-primary-inverse);
            background: var(--sr5-text-primary);
        }
    }

    /** CSS for the Environmental Modifier Application Window
     *
     */
    button.env-modifier {
        text-align: left;
        @include config.font-size(13);
        line-height: normal;
        padding-top: 5px;
        padding-bottom: 5px;
    }

    .env-modifier-active {
        border-radius: 8px;
        background-color: var(--sr5-surface-secondary-elevated);
        color: var(--sr5-text-highlight);
    }

    .env-modifier-total {
        font-weight: bold;
    }

    td.env-modifier-level {
        padding-right: 6px;
    }

    .skill-roll-not-defaultable {
        font-style: italic;
    }

    /** Input element for inventory name editing */
    input#input-inventory {
        // Otherwise the other classes used will break styling.
        width: auto;
    }

    .document-name {
        @include config.systemFonts;
        @include config.font-size(18);
        font-weight: bold;
    }

    .cell-input-roll {
        color: var(--sr5-text-highlight);
    }

    // Intended to affect icons only within the url/pdf source controls.
    .source-button i.fas {
        color:  var(--sr5-text-highlight-muted);
    }
}
//END SR5 Style

.custom-item-element {
    color: var(--sr5-text-primary); /* Text color */
}
//lable back to white color
.matrix-label {
    color: var(--sr5-text-primary);
}

.scroll-area-matrix {
    overflow-y: auto;
    color: var(--sr5-text-primary);
}

//table in any Item
.SR5 th {
    color: var(--sr5-text-highlight);
    padding: 10px; /* Padding */
    text-align: left; /* Left text */
    border-bottom: 2px solid var(--sr5-color-edge); /* Add a border at the bottom */
    @include config.font-size(14);
}
.SR5 th:hover {
    color: var(--sr5-text-highlight-muted);
}
.SR5 caption {
    background: none;
    color: var(--sr5-text-highlight);
    padding: 6px;
    text-align: left;
    @include config.font-size(14);
}
.SR5 caption:hover {
    color: var(--sr5-text-secondary);
}
.SR5 tr {
    color: var(--sr5-text-primary);
}
.SR5 tr:hover {
    color: var(--sr5-text-highlight-muted);
}
.SR5 tr p:not(th p) {
    padding-left: 10px; /* Padding on the left */
}
